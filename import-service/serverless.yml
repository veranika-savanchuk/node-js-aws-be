# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1

  environment:
    SQS_QUEUE_URL: "${cf:product-service-${self:provider.stage}.SQSQueueUrl}"

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::pet-shop-import"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::pet-shop-import/*"
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - "${cf:product-service-${self:provider.stage}.SQSQueueArn}"


plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true


functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          method: get
          path: import
          cors: true
          request:
            parameters:
              paths:
                name: true
          authorizer:
            name: "basicAuthorizer"
            arn: ${cf:authorization-service-${self:provider.stage}.lambdaBasicAuthorizerArn}
            resultTtlInSeconds: 0
            identitySource: "method.request.header.Authorization"
            type: "token"

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: pet-shop-import
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true


resources:
  Resources:
    GatewayResponseAccessDenied:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: 'ACCESS_DENIED'
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseUnauthorized:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: 'UNAUTHORIZED'
        RestApiId:
          Ref: 'ApiGatewayRestApi'